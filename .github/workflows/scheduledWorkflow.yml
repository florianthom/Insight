name: Insight Scheduled-Workflow

on:
    workflow_dispatch:
    schedule:
        - cron: "0 0 * * *"

jobs:
    scheduledDataUpdateAndRedeploy:
        runs-on: ubuntu-latest
        timeout-minutes: 5
        defaults:
            run:
                working-directory: ./UpdateData
        env:
            GITHUBAPI_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUBAPI_PERSONAL_ACCESS_TOKEN }}
            GOOGLE_DRIVE_TYPE: ${{ secrets.GOOGLE_DRIVE_TYPE }}
            GOOGLE_DRIVE_PROJECT_ID: ${{ secrets.GOOGLE_DRIVE_PROJECT_ID }}
            GOOGLE_DRIVE_PRIVATE_KEY_ID: ${{ secrets.GOOGLE_DRIVE_PRIVATE_KEY_ID }}
            GOOGLE_DRIVE_PRIVATE_KEY: ${{ secrets.GOOGLE_DRIVE_PRIVATE_KEY }}
            GOOGLE_DRIVE_CLIENT_EMAIL: ${{ secrets.GOOGLE_DRIVE_CLIENT_EMAIL }}
            GOOGLE_DRIVE_CLIENT_ID: ${{ secrets.GOOGLE_DRIVE_CLIENT_ID }}
            GOOGLE_DRIVE_AUTH_URI: ${{ secrets.GOOGLE_DRIVE_AUTH_URI }}
            GOOGLE_DRIVE_TOKEN_URI: ${{ secrets.GOOGLE_DRIVE_TOKEN_URI }}
            GOOGLE_DRIVE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.GOOGLE_DRIVE_AUTH_PROVIDER_X509_CERT_URL }}
            GOOGLE_DRIVE_CLIENT_X509_CERT_URL: ${{ secrets.GOOGLE_DRIVE_CLIENT_X509_CERT_URL }}
        steps:
            - uses: actions/checkout@v2
            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 6.0.203
            - name: Install dependencies
              run: dotnet restore
            - name: Build
              run: dotnet build --configuration Release --no-restore
            - name: Build
              run: dotnet run
            - name: "Deploy files"
              run: |
                  git config --global user.email "thom.florian@yahoo.de"
                  git config --global user.name "florianthom"
                  git add -A
                  git commit -a -m "chore: update stats from $(date +%s)"
                  git push origin HEAD:main

    build:
        name: Run build + deploy to S3
        needs: scheduledDataUpdateAndRedeploy
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v4
              with:
                  node-version: "20"
            - name: "Get newest files"
              run: |
                  git config --global user.email "thom.florian@yahoo.de"
                  git config --global user.name "florianthom"
                  git pull
            - name: Installing dependencies
              run: yarn install --frozen-lockfile
            - name: Run build
              run: yarn build
            - name: aws login
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-central-1
            - name: Clean S3 folder
              run: yarn run s3-clean
            - name: Deploy to S3
              run: yarn run s3-deploy

    # dockerpush:
    #     name: Build image + push to docker hub
    #     needs: scheduledDataUpdateAndRedeploy
    #     runs-on: ubuntu-latest
    #     timeout-minutes: 5
    #     steps:
    #         - uses: actions/checkout@v2
    #         - name: "Get newest files"
    #           run: |
    #               git config --global user.email "thom.florian@yahoo.de"
    #               git config --global user.name "florianthom"
    #               git pull
    #         - name: docker login
    #           env:
    #               DOCKER_USER: ${{secrets.DOCKER_USER}}
    #               DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    #           run: |
    #               docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    #         - name: build the docker image
    #           run: docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/insight:latest
    #         - name: docker push
    #           run: docker push ${{secrets.DOCKER_USER}}/insight:latest
